// Script to initialize demo data in Supabase KV Store
// This can be called from the frontend admin panel or run separately

import * as kv from './kv_store.ts';

export async function initializeDemoData() {
  console.log('üéµ Initializing demo data...');
  
  try {
    // Check if data already exists
    const existingPublications = await kv.getByPrefix('publication:').catch(() => []);
    if (existingPublications && existingPublications.length > 0) {
      console.log('‚úÖ Demo data already exists, skipping initialization');
      return { success: true, message: 'Demo data already exists' };
    }
    
    // Check if pages already exist
    const existingPages = await kv.getByPrefix('page:').catch(() => []);
    if (existingPages && existingPages.length > 0) {
      console.log('‚úÖ Pages already exist, skipping pages initialization');
    }
    
    // Sample Publications
    const publications = [
      {
        id: 'pub-1',
        title: '–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –¥–æ—à–∫–æ–ª—å–Ω–∏–∫–æ–≤',
        description: '–ö–æ–Ω—Å–ø–µ–∫—Ç –∑–∞–Ω—è—Ç–∏—è –ø–æ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é –¥–ª—è —Å—Ç–∞—Ä—à–µ–π –≥—Ä—É–ø–ø—ã',
        category: '–ö–æ–Ω—Å–ø–µ–∫—Ç—ã –∑–∞–Ω—è—Ç–∏–π',
        image: '',
        file_url: null,
        date: new Date('2024-01-15').toISOString(),
      },
      {
        id: 'pub-2',
        title: '–°—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ –û—Å–µ–Ω–∏',
        description: '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –¥–µ—Ç–µ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω–æ–π –≥—Ä—É–ø–ø—ã',
        category: '–°—Ü–µ–Ω–∞—Ä–∏–∏',
        image: '',
        file_url: null,
        date: new Date('2024-02-20').toISOString(),
      },
      {
        id: 'pub-3',
        title: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã –¥–ª—è –º–∞–ª—ã—à–µ–π',
        description: '–ö–∞—Ä—Ç–æ—Ç–µ–∫–∞ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –∏–≥—Ä –¥–ª—è –º–ª–∞–¥—à–µ–π –≥—Ä—É–ø–ø—ã',
        category: '–ö–∞—Ä—Ç–æ—Ç–µ–∫–∞',
        image: '',
        file_url: null,
        date: new Date('2024-03-10').toISOString(),
      },
    ];
    
    for (const pub of publications) {
      await kv.set(`publication:${pub.id}`, pub);
    }
    console.log(`‚úÖ Created ${publications.length} publications`);
    
    // Sample Albums
    const albums = [
      {
        id: 'album-1',
        title: '–ü—Ä–∞–∑–¥–Ω–∏–∫ –û—Å–µ–Ω–∏ 2024',
        cover: '',
        photos: [],
        date: new Date('2024-09-15').toISOString(),
      },
      {
        id: 'album-2',
        title: '–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π —É—Ç—Ä–µ–Ω–Ω–∏–∫',
        cover: '',
        photos: [],
        date: new Date('2024-12-25').toISOString(),
      },
    ];
    
    for (const album of albums) {
      await kv.set(`album:${album.id}`, album);
    }
    console.log(`‚úÖ Created ${albums.length} albums`);
    
    // Sample Achievements
    const achievements = [
      {
        id: 'ach-1',
        title: '–õ–∞—É—Ä–µ–∞—Ç –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞',
        year: 2024,
        type: 'award',
        icon: 'Award',
        color: 'text-yellow-500',
      },
      {
        id: 'ach-2',
        title: '–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏',
        year: 2023,
        type: 'thanks',
        icon: 'Heart',
        color: 'text-pink-500',
      },
      {
        id: 'ach-3',
        title: '–£—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ç–æ–¥–∏—á–µ—Å–∫–æ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏',
        year: 2024,
        type: 'participation',
        icon: 'Users',
        color: 'text-blue-500',
      },
    ];
    
    for (const ach of achievements) {
      await kv.set(`achievement:${ach.id}`, ach);
    }
    console.log(`‚úÖ Created ${achievements.length} achievements`);
    
    // Sample Portfolio
    const portfolio = [
      {
        id: 'port-1',
        title: '–î–∏–ø–ª–æ–º –æ –≤—ã—Å—à–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏',
        organization: '–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
        category: 'diploma',
        image: '',
        image_url: '',
        date: new Date('2010-06-20').toISOString(),
      },
      {
        id: 'port-2',
        title: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏',
        organization: '–ò–Ω—Å—Ç–∏—Ç—É—Ç —Ä–∞–∑–≤–∏—Ç–∏—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
        category: 'certificate',
        image: '',
        image_url: '',
        date: new Date('2023-05-15').toISOString(),
      },
    ];
    
    for (const item of portfolio) {
      await kv.set(`portfolio:${item.id}`, item);
    }
    console.log(`‚úÖ Created ${portfolio.length} portfolio items`);
    
    // Sample Reviews
    const reviews = [
      {
        id: 'rev-1',
        author: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
        role: '–†–æ–¥–∏—Ç–µ–ª—å',
        text: '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å! –î–µ—Ç–∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º —Ö–æ–¥—è—Ç –Ω–∞ –∑–∞–Ω—è—Ç–∏—è.',
        rating: 5,
        status: 'approved',
        likes: 12,
        date: new Date('2024-08-10').toISOString(),
      },
      {
        id: 'rev-2',
        author: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
        role: '–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å',
        text: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞. –û—Ç–ª–∏—á–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤!',
        rating: 5,
        status: 'approved',
        likes: 8,
        date: new Date('2024-09-05').toISOString(),
      },
    ];
    
    for (const review of reviews) {
      await kv.set(`review:${review.id}`, review);
    }
    console.log(`‚úÖ Created ${reviews.length} reviews`);
    
    // Sample Audio
    const audio = [
      {
        id: 'audio-1',
        title: '–û—Å–µ–Ω–Ω—è—è –ø–µ—Å–µ–Ω–∫–∞',
        artist: '–î–µ—Ç—Å–∫–∏–π —Ö–æ—Ä',
        category: '–ü–µ—Å–Ω–∏',
        file_url: '',
        duration: '2:30',
      },
      {
        id: 'audio-2',
        title: '–¢–∞–Ω–µ—Ü —Å –ª–∏—Å—Ç–æ—á–∫–∞–º–∏',
        artist: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –º—É–∑—ã–∫–∞',
        category: '–¢–∞–Ω—Ü—ã',
        file_url: '',
        duration: '3:15',
      },
    ];
    
    for (const track of audio) {
      await kv.set(`audio:${track.id}`, track);
    }
    console.log(`‚úÖ Created ${audio.length} audio tracks`);
    
    // Sample Videos
    const videos = [
      {
        id: 'video-1',
        title: '–ü—Ä–∞–∑–¥–Ω–∏–∫ –û—Å–µ–Ω–∏ - –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—à–µ–π –≥—Ä—É–ø–ø—ã',
        description: '–í–∏–¥–µ–æ–∑–∞–ø–∏—Å—å –æ—Å–µ–Ω–Ω–µ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ 2024',
        category: '–ü—Ä–∞–∑–¥–Ω–∏–∫–∏',
        thumbnail: '',
        video_url: '',
        vk_iframe: '',
        duration: '15:30',
        views: 45,
        date: new Date('2024-09-20').toISOString(),
      },
      {
        id: 'video-2',
        title: '–û—Ç–∫—Ä—ã—Ç–æ–µ –∑–∞–Ω—è—Ç–∏–µ –ø–æ –º—É–∑—ã–∫–µ',
        description: '–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω–æ–π –≥—Ä—É–ø–ø—ã',
        category: '–ó–∞–Ω—è—Ç–∏—è',
        thumbnail: '',
        video_url: '',
        vk_iframe: '',
        duration: '25:00',
        views: 32,
        date: new Date('2024-10-05').toISOString(),
      },
    ];
    
    for (const video of videos) {
      await kv.set(`video:${video.id}`, video);
    }
    console.log(`‚úÖ Created ${videos.length} videos`);
    
    // Sample Pages (only create if they don't exist)
    const pages = [
      {
        id: 'home',
        title: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
        content: '',
        image_url: 'https://images.unsplash.com/photo-1750924718882-33ee16ddf3a8?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHx0ZWFjaGVyJTIwcG9ydHJhaXQlMjB3b21hbnxlbnwxfHx8fDE3NjA1NjY4NTV8MA&ixlib=rb-4.1.0&q=80&w=1080',
        updated_at: new Date().toISOString(),
      },
      {
        id: 'about',
        title: '–û —Å–µ–±–µ',
        content: '',
        image_url: 'https://images.unsplash.com/photo-1750924718882-33ee16ddf3a8?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHx8fDE3NjA1NjY4NTV8MA&ixlib=rb-4.1.0&q=80&w=1080',
        updated_at: new Date().toISOString(),
      },
    ];
    
    let pagesCreated = 0;
    if (existingPages.length === 0) {
      for (const page of pages) {
        await kv.set(`page:${page.id}`, page);
        pagesCreated++;
      }
      console.log(`‚úÖ Created ${pagesCreated} pages`);
    }
    
    console.log('‚úÖ Demo data initialization completed!');
    
    return {
      success: true,
      message: 'Demo data initialized successfully',
      stats: {
        publications: publications.length,
        albums: albums.length,
        achievements: achievements.length,
        portfolio: portfolio.length,
        reviews: reviews.length,
        audio: audio.length,
        videos: videos.length,
        pages: pagesCreated,
      }
    };
    
  } catch (error) {
    console.error('‚ùå Error initializing demo data:', error);
    return {
      success: false,
      message: `Failed to initialize demo data: ${error.message}`,
    };
  }
}
