#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π
import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('\n==============================================');
console.log('  üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π');
console.log('==============================================\n');

let hasErrors = false;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
console.log('1Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js...');
try {
  const nodeVersion = process.version;
  const majorVersion = parseInt(nodeVersion.slice(1).split('.')[0]);
  
  console.log(`   ‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${nodeVersion}`);
  
  if (majorVersion < 18) {
    console.log('   ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 18 –∏–ª–∏ –≤—ã—à–µ');
    console.log('   üì• –°–∫–∞—á–∞–π—Ç–µ —Å https://nodejs.org/\n');
    hasErrors = true;
  } else {
    console.log('   ‚úÖ –í–µ—Ä—Å–∏—è –ø–æ–¥—Ö–æ–¥–∏—Ç\n');
  }
} catch (error) {
  console.log('   ‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n');
  hasErrors = true;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
console.log('2Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ npm...');
try {
  const npmVersion = execSync('npm --version', { encoding: 'utf-8' }).trim();
  console.log(`   ‚úÖ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${npmVersion}\n`);
} catch (error) {
  console.log('   ‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω\n');
  hasErrors = true;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
console.log('3Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞...');
try {
  const stats = fs.statfsSync(process.cwd());
  const freeSpace = (stats.bsize * stats.bavail) / (1024 * 1024 * 1024);
  
  if (freeSpace < 1) {
    console.log(`   ‚ö†Ô∏è  –ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: ${freeSpace.toFixed(2)} –ì–ë`);
    console.log('   üíæ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–∏–Ω–∏–º—É–º 1 –ì–ë\n');
    hasErrors = true;
  } else {
    console.log(`   ‚úÖ –°–≤–æ–±–æ–¥–Ω–æ: ${freeSpace.toFixed(2)} –ì–ë\n`);
  }
} catch (error) {
  console.log('   ‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
console.log('4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...');
try {
  const testDir = path.join(process.cwd(), 'test-write-' + Date.now());
  fs.mkdirSync(testDir);
  fs.rmdirSync(testDir);
  console.log('   ‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –µ—Å—Ç—å\n');
} catch (error) {
  console.log('   ‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É');
  console.log('   üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n');
  hasErrors = true;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
console.log('5Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤...');
import { createServer } from 'net';

function checkPort(port) {
  return new Promise((resolve) => {
    const server = createServer();
    
    server.once('error', (err) => {
      if (err.code === 'EADDRINUSE') {
        resolve(false);
      } else {
        resolve(true);
      }
    });
    
    server.once('listening', () => {
      server.close();
      resolve(true);
    });
    
    server.listen(port);
  });
}

const port5173Available = await checkPort(5173);
const port3001Available = await checkPort(3001);

if (!port5173Available) {
  console.log('   ‚ö†Ô∏è  –ü–æ—Ä—Ç 5173 –∑–∞–Ω—è—Ç (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)');
  console.log('   üí° –ò–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç –≤ vite.config.ts\n');
} else {
  console.log('   ‚úÖ –ü–æ—Ä—Ç 5173 —Å–≤–æ–±–æ–¥–µ–Ω (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)');
}

if (!port3001Available) {
  console.log('   ‚ö†Ô∏è  –ü–æ—Ä—Ç 3001 –∑–∞–Ω—è—Ç (–±—ç–∫–µ–Ω–¥)');
  console.log('   üí° –ò–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç –≤ server/index.js\n');
} else {
  console.log('   ‚úÖ –ü–æ—Ä—Ç 3001 —Å–≤–æ–±–æ–¥–µ–Ω (–±—ç–∫–µ–Ω–¥)\n');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
console.log('6Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞...');
const requiredFiles = [
  'package.json',
  'vite.config.ts',
  'tsconfig.json',
  'App.tsx',
  'server/index.js',
  'server/setup-db.js'
];

let missingFiles = false;
requiredFiles.forEach(file => {
  if (!fs.existsSync(file)) {
    console.log(`   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`);
    missingFiles = true;
  }
});

if (!missingFiles) {
  console.log('   ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ\n');
} else {
  console.log('   ‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n');
  hasErrors = true;
}

// –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
console.log('==============================================');
if (hasErrors) {
  console.log('  ‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã');
  console.log('  üìñ –°–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤—ã—à–µ');
  console.log('  üí° –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã');
} else {
  console.log('  ‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ!');
  console.log('');
  console.log('  –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('  1. npm install');
  console.log('  2. npm run setup');
  console.log('  3. npm run dev');
}
console.log('==============================================\n');

process.exit(hasErrors ? 1 : 0);
